SQL> DECLARE  
  2  designation VARCHAR2(30);
  3  eno number(5) := 5;
  4  id BOOLEAN;
  5      inter INTERVAL YEAR(2) TO MONTH;
  6  BEGIN  
  7  designation := UPPER('Web Developer');
  8  id := TRUE;
  9  inter := INTERVAL '45' YEAR;
 10  DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' || designation, id);
 11  END;
 12  /
DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' || designation, id);
*
ERROR at line 10:
ORA-06550: line 10, column 1: 
PLS-00306: wrong number or types of arguments in call to 'PUT_LINE' 
ORA-06550: line 10, column 1: 
PL/SQL: Statement ignored 


SQL> ed
Wrote file afiedt.buf

  1  DECLARE  
  2  designation VARCHAR2(30);
  3  eno number(5) := 5;
  4  id BOOLEAN;
  5      inter INTERVAL YEAR(2) TO MONTH;
  6  BEGIN  
  7  designation := UPPER('Web Developer');
  8  id := TRUE;
  9  inter := INTERVAL '45' YEAR;
 10  DBMS_OUTPUT.PUT_LINE('This is related to Employee Job Title:' || designation);
 11* END;
SQL> /
This is related to Employee Job Title:WEB DEVELOPER                             

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  num1 number := 10;
  3  num2 number := 20;
  4  BEGIN
  5  DECLARE
  6  num_addition number;
  7  BEGIN
  8  num_addition := num1 + num2;
  9  dbms_output.put_line('Addition is: ' || num_addition);
 10  END;  -- End of access num_addition variable
 11  END;
 12  /
Addition is: 30                                                                 

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  
  3  eno number(5) NOT NULL := 2; --assign value into eno variable
  4  
  5  ename varchar2(15) := 'Branson Devs';
  6  
  7  /* Constant value is fixed for edept value is "Web Deloper"
  8  is fixed all program not required declare all times. */
  9  edept CONSTANT varchar2(15) := 'Web Developer';
 10  BEGIN
 11  dbms_output.put_line('Declared Value:');
 12  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
 13  dbms_output.put_line('Constant Declared:');
 14  dbms_output.put_line(' Employee Department: ' || edept);
 15  END;
 16  /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> 
SQL> DECLARE
  2  
  3  eno number(5) NOT NULL := 2; --assign value into eno variable
  4  
  5  ename varchar2(15) := 'Branson Devs';
  6  
  7  /* Constant value is fixed for edept value is "Web Deloper"
  8  is fixed all program not required declare all times. */
  9  edept CONSTANT varchar2(15) := 'Web Developer';
 10  BEGIN
 11  dbms_output.put_line('Declared Value:');
 12  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
 13  dbms_output.put_line('Constant Declared:');
 14  dbms_output.put_line(' Employee Department: ' || edept);
 15  END;
 16  /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  gender CHAR(20) := 'female';
  3      result CHAR(20) := 'second';
  4  BEGIN
  5     IF ( gender = 'male' ) THEN
  6        DBMS_OUTPUT.PUT_LINE('Gender Male Record Skip!');
  7     ELSE
  8     IF ( result = 'distinction' ) THEN
  9        DBMS_OUTPUT.PUT_LINE('First Class with Distinction');
 10     ELSIF ( result = 'first' ) THEN
 11        DBMS_OUTPUT.PUT_LINE('First Class');
 12     ELSIF ( result = 'second' ) THEN
 13        DBMS_OUTPUT.PUT_LINE('Second Class');
 14     ELSIF ( result = 'third' ) THEN
 15        DBMS_OUTPUT.PUT_LINE('Third Class');
 16     ELSE
 17        DBMS_OUTPUT.PUT_LINE('Fail');
 18     END IF;
 19  END IF;
 20  END;
 21  /
Second Class                                                                    

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  a number := 7;
  3  BEGIN
  4  CASE a
  5  WHEN 1 THEN
  6  DBMS_OUTPUT.PUT_LINE('value 1');
  7  WHEN 2 THEN
  8  DBMS_OUTPUT.PUT_LINE('value 2');
  9  WHEN 3 THEN
 10  DBMS_OUTPUT.PUT_LINE('value 3');
 11  ELSE
 12  DBMS_OUTPUT.PUT_LINE('no matching CASE found');
 13  END CASE;
 14  END;
 15  /
no matching CASE found                                                          

PL/SQL procedure successfully completed.

SQL> spool off;

SQL> DECLARE
  2     no NUMBER := 5;
  3  BEGIN
  4  LOOP
  5  DBMS_OUTPUT.PUT_LINE ('Inside value:  no = ' || no);
  6      no := no -1;
  7      IF no = 0 THEN
  8        EXIT;
  9      END IF;
 10      END LOOP;
 11      DBMS_OUTPUT.PUT_LINE('Outside loop end');
 12  END;
 13  /
Inside value:  no = 5                                                           
Inside value:  no = 4                                                           
Inside value:  no = 3                                                           
Inside value:  no = 2                                                           
Inside value:  no = 1                                                           
Outside loop end                                                                

PL/SQL procedure successfully completed.

SQL> 
SQL> spool off;

SQL> 
SQL> declare
  2  i number(20);
  3  begin
  4  for i in 1..10
  5  loop
  6  dbms_output.put_line(i);
  7  end loop;
  8  end;
  9  /
1                                                                               
2                                                                               
3                                                                               
4                                                                               
5                                                                               
6                                                                               
7                                                                               
8                                                                               
9                                                                               
10                                                                              

PL/SQL procedure successfully completed.

SQL> declare
  2  n number;
  3  x number;
  4  begin
  5     n:=&n;
  6     x:=mod(n,2);
  7    if (x=0) then
  8     dbms_output.put_line('the number is even ');
  9     else
 10     dbms_output.put_line('the number is odd ');
 11     end if;
 12    end;
 13  /
Enter value for n: 5
old   5:    n:=&n;
new   5:    n:=5;
the number is odd                                                               

PL/SQL procedure successfully completed.

SQL> declare
  2  n number;
  3  i number;
  4  a number;
  5  begin
  6  n:=&n;
  7  for i in 1..15
  8  loop
  9  a:=n*i;
 10  dbms_output.put_line(n|| '*' || i || '=' || a);
 11  end loop;
 12  end;
 13  /
Enter value for n: 3
old   6: n:=&n;
new   6: n:=3;
3*1=3                                                                           
3*2=6                                                                           
3*3=9                                                                           
3*4=12                                                                          
3*5=15                                                                          
3*6=18                                                                          
3*7=21                                                                          
3*8=24                                                                          
3*9=27                                                                          
3*10=30                                                                         
3*11=33                                                                         
3*12=36                                                                         
3*13=39                                                                         
3*14=42                                                                         
3*15=45                                                                         

PL/SQL procedure successfully completed.

SQL> spool off;
